{
  "name": "react-geosuggest",
  "version": "2.8.0",
  "description": "A React autosuggest for the Google Maps Places API.",
  "main": "module/Geosuggest.js",
  "author": "Robert Katzki <katzki@ubilabs.net>",
  "homepage": "https://github.com/ubilabs/react-geosuggest",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/ubilabs/react-geosuggest.git"
  },
  "bugs": {
    "url": "https://github.com/ubilabs/react-geosuggest/issues"
  },
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.0 || ^16.0.0"
  },
  "dependencies": {
    "@material-ui/core": "^4.0.0-rc.0",
    "@material-ui/icons": "^4.0.0-rc.0",
    "react-material-ui-form-validator": "^2.0.9",
    "classnames": "^2.2.6",
    "lodash.debounce": "^4.0.6",
    "react-addons-shallow-compare": "^15.6.2"
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-preset-react": "^6.24.1",
    "babelify": "^8.0.0",
    "browserify": "^16.2.2",
    "browserify-global-shim": "^1.0.3",
    "chai": "^4.1.2",
    "conventional-changelog-generator": "0.0.3",
    "copyfiles": "^2.0.0",
    "eslint": "^5.2.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-plugin-prettier": "^2.6.2",
    "eslint-plugin-react": "^7.10.0",
    "gh-pages": "^1.2.0",
    "jsdom": "^11.12.0",
    "light-server": "^2.5.1",
    "mocha": "^5.2.0",
    "nyc": "^12.0.2",
    "prettier": "^1.14.0",
    "prop-types": "^15.6.2",
    "react": "^16.8.0",
    "react-dom": "^16.8.0",
    "sinon": "^6.1.4",
    "uglify-js": "^3.4.6"
  },
  "scripts": {
    "prepublish": "npm run build:module",
    "lint": "eslint ./src/*.jsx ./src/*.js ./example/src ./test/*.jsx ./test/*.js ./test/fixtures",
    "pretest": "npm run js:prettier:ci && npm run lint",
    "test": "nyc --include 'src/*' -e .jsx -s npm run unit-test",
    "posttest": "nyc report --reporter=text --reporter=lcov --reporter=html",
    "start": "npm run server",
    "unit-test": "mocha --require babel-core/register --require ./test/test_helper.js \"test/**/*@(.js|.jsx)\"",
    "server": "npm run prepare:example && light-server -s example/dist -p 8000 -w 'src/*.jsx,src/*.js,example/src/*.js # npm run js:example' -w 'src/*.css,example/src/*.css # npm run css # reloadcss' -w 'example/src/*.html # npm run copy:assets # reload'",
    "prepare:example": "rm -rf example/dist && mkdir example/dist && npm run copy:assets && npm run js:example && npm run css",
    "copy:assets": "cp example/src/*.html example/dist && cp example/src/*.svg example/dist",
    "css": "cat example/src/app.css src/geosuggest.css > example/dist/app.css",
    "js:example": "browserify example/src/app.js -t babelify --extension=.jsx> example/dist/app.js",
    "js:example:uglify": "uglifyjs example/dist/app.js -o example/dist/app.js -c warnings=false --mangle",
    "js:browser": "browserify src/Geosuggest.jsx --standalone Geosuggest --exclude react -t babelify --extension=.jsx -t browserify-global-shim > dist/react-geosuggest.js",
    "js:browser:uglify": "uglifyjs dist/react-geosuggest.js -o dist/react-geosuggest.min.js -c warnings=false,drop_console=true --mangle",
    "js:prettier:ci": "prettier --config ./.prettierrc.yml --ignore-path ./.prettierignore --list-different \"**/**.{js,jsx}\"",
    "js:prettier:fix": "prettier --config ./.prettierrc.yml --ignore-path ./.prettierignore --write \"**/**.{js,jsx}\"",
    "build:module": "babel src --out-dir module && copyfiles -f src/geosuggest.css module/",
    "build:browser": "npm run js:browser && npm run js:browser:uglify",
    "build:example": "npm run prepare:example && npm run js:example:uglify",
    "release:patch": "npm version patch -m \"chore(release): version %s\"",
    "release:minor": "npm version minor -m \"chore(release): version %s\"",
    "release:major": "npm version major -m \"chore(release): version %s\"",
    "changelog": "conventional-changelog-generator && atom -w CHANGELOG.md",
    "preversion": "npm test",
    "version": "npm run build:browser && npm run changelog && git add .",
    "postversion": "git push && git push --tags && npm run publish:example",
    "publish:example": "npm run build:example && gh-pages -d example/dist"
  },
  "browserify-global-shim": {
    "react": "React"
  },
  "readmeFilename": "README.md",
  "keywords": [
    "react",
    "react-component",
    "google",
    "autosuggest",
    "places"
  ]
}
